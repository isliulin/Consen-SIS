/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    : 系统资源管理模块
*
*  文件名称    : SysHardware.h
*
*  功能简介    :
*
*  作者       : 李琦
*
*  创建日期    : 2016-05-13
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef SYS_HARDWARE_H_
#define SYS_HARDWARE_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "inc/Hardware.h"
#include "inc/DataType.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
/* 使能校时系统时间 */
#define ENABLE_SYSTEM_ADJUST_TIME        (1U)
/* 校时源选择 */
#define SYSTEM_ADJUST_TIME_PULSE_SRC_MAIN      (1U)  //主机架
#define SYSTEM_ADJUST_TIME_PULSE_SRC_CM        (2U)  //通讯模块
/* 使能看门狗 */
#define ENABLE_WTD                              (1U)
/* 看门狗配置权限 */
#define WTD_CONFIG_ENABLE                       (1U)
#define WTD_CONFIG_DISABLE                      (0U)
/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/
/* 24v报警位*/
typedef enum AlarmTag
{
    ALARM_BIT_ERR = 0,                              /* 故障 */
    ALARM_BIT_OK = 1                                /* 正常 */
} Alarm_t;

typedef enum SupplyTypeTag
{
    ST_24V1 = 0,                                    /*24v电源1 */
    ST_24V2 = 1,                                    /*24v电源2*/
    ST_BTRY,                                        /*电池*/
    NUM_OF_SUPPLY_TYPE
} SupplyType_t;


typedef struct SysTimeTag
{
    uint32_t uiSec;                                 /* 秒 */
    uint32_t uiMicSec;                              /* 微秒 */
}SysTime_t;

typedef struct SysFCValTag
{
    uint32_t uiSec;                                 /* 秒 */
    uint32_t uiMicSec;                              /* 微秒 */
}SysFCVal_t;
/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
* 函数名称: GetTemperature
*
* 功能描述: 获取温度
*
* 输入参数: 无
*
* 输出参数: pfTemp: 指向获取的温度值
*        bpValid: 温度值是否有效
*
* 返 回 值  : 读取温度是否成功
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t GetTemperature(float_t *pfTemp, bool_t *bpValid);


/*
***********************************************************************************************************************
* 函数名称: GetSwitchKeyPos
*
* 功能描述: 获取钥匙开关状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 钥匙开关状态（run/stop/prog/init）
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint16_t GetSwitchKeyPos(void);


/*
***********************************************************************************************************************
* 函数名称: Get24Volt1AlarmBit
*
* 功能描述: 获取24v1报警位
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 故障/正常
*
* 注意事项: 无
***********************************************************************************************************************
*/
Alarm_t Get24Volt1AlarmBit(void);


/*
***********************************************************************************************************************
* 函数名称: Get24Volt2AlarmBit
*
* 功能描述: 获取24v2报警位
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 故障/正常
*
* 注意事项: 无
***********************************************************************************************************************
*/
Alarm_t Get24Volt2AlarmBit(void);


/*
***********************************************************************************************************************
* 函数名称: GetBatteryAlarmBit
*
* 功能描述: 获取电池报警位
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 故障/正常
*
* 注意事项: 无
***********************************************************************************************************************
*/
Alarm_t GetBatteryAlarmBit(void);


/*
***********************************************************************************************************************
* 函数名称: UpdateStateLED
*
* 功能描述: 更新状态灯寄存器
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void UpdateStateLED(uint16_t usState);

/*
***********************************************************************************************************************
* 函数名称: UpdateKeyLED
*
* 功能描述: 更新钥匙灯寄存器
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void UpdateKeyLED(uint16_t usState);


/*
***********************************************************************************************************************
* 函数名称: UpdateComLED
*
* 功能描述: 更新通讯灯寄存器
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void UpdateComLED(uint16_t usState);

/*
***********************************************************************************************************************
* 函数名称: SetLocalPMAddr
*
* 功能描述: 设置本机PM地址
*
* 输入参数: iTimeout 超时
*
* 输出参数: 无
*
* 返 回 值  : 设置成功或失败
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SetLocalPMAddr(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUMonitorState
*
* 功能描述: 读取MCU状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : Bit0: MCU状态位。0：无故障，1：有故障
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint16_t SysGetMCUMonitorState(void);

/*
***********************************************************************************************************************
* 函数名称: GetLocalPMStabState
*
* 功能描述: 判断插稳状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : true：稳；false：不稳
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t GetLocalPMStabState(void);

/*
***********************************************************************************************************************
* 函数名称: SysSetAlarmLED
*
* 功能描述: 设置Alarm灯
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysSetAlarmLED(uint16_t usState);

/*
***********************************************************************************************************************
* 函数名称: SysGetSyncTimeLow32
*
* 功能描述: 获取同步时间
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 低32位时间
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t SysGetSyncTimeLow32(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetSyncTimeHigh16
*
* 功能描述: 获取同步时间
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 高16位时间
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint16_t SysGetSyncTimeHigh16(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetSyncTimeState
*
* 功能描述: 获取同步时间状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 32位时间
*
* 注意事项: "Bit0：0：同步校准未完成，1：同步校准已完成"
***********************************************************************************************************************
*/
uint16_t SysGetSyncTimeState(void);

/*
***********************************************************************************************************************
* 函数名称: SysSetSyncAdjustTimeLow32
*
* 功能描述: 设置同步校时时间
*
* 输入参数: 低32位时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysSetSyncAdjustTimeLow32(uint32_t uiAdjustTime);

/*
***********************************************************************************************************************
* 函数名称: SysSetSyncAdjustTimeHigh16
*
* 功能描述: 设置同步校时时间
*
* 输入参数: 高16位时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysSetSyncAdjustTimeHigh16(uint16_t usAdjustTime);
/*
***********************************************************************************************************************
* 函数名称: SysSetSyncAdjustTimeEnable
*
* 功能描述: 设置同步校时时间使能
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysSetSyncAdjustTimeEnable(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetModularOnLine
*
* 功能描述: 模块在线状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 在线状态
*
* 注意事项: "Bit1：对模块2主备状态。0：未在线，1：在线"
*         "Bit0：对模块1主备状态。0：未在线，1：在线"
***********************************************************************************************************************
*/
uint16_t SysGetModularOnLine(void);
/*
***********************************************************************************************************************
* 函数名称: SysSetTimerMasterEnable
*
* 功能描述: 设置升主使能
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 在线状态
*
* 注意事项: 写入0xA5A5指示升主使能，写入0x5A5A指示降备使能，写入其他值无效。
* 
***********************************************************************************************************************
*/
void SysSetTimerMasterEnable(uint16_t usRegVal);
/*
***********************************************************************************************************************
* 函数名称: SysSetSWRuninOK
*
* 功能描述: 设置软件运行OK
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 在线状态
*
* 注意事项: 写入0xA5A5指示软件运行OK，写入其他值指示软件NOK。
* 
***********************************************************************************************************************
*/
void SysSetSWRuninOK(uint16_t usRegVal);

/*
***********************************************************************************************************************
* 函数名称: SysGetClkDiagVal
*
* 功能描述: 时钟诊断寄存器
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : Bit15-1：保留 Bit0：时钟诊断结果。0：故障，1：正常
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetClkDiagVal(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMainBackupState
*
* 功能描述: 获取同步时钟准备状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 同步时钟准备状态
*
* 注意事项: "Bit2：对模块2主备状态。0：备用，1：主用"
*        "Bit1：对模块1主备状态。0：备用，1：主用"
*        "Bit0：本模块主备状态。0：备用，1：主用"
* 
***********************************************************************************************************************
*/
uint16_t SysGetMainBackupState(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetSystemtime
*
* 功能描述: 获取系统时间
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 系统时间（单位：微秒）
*
* 注意事项:
*
***********************************************************************************************************************
*/
ulong64_t SysGetSystemtime(void);

/*
***********************************************************************************************************************
* 函数名称: SysAdjustSystemTime
*
* 功能描述: 校准系统时间
*
* 输入参数: ulAdjustTime 校准时间（单位：微秒）
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysAdjustSystemTime(ulong64_t ulAdjustTime);

/*
***********************************************************************************************************************
* 函数名称: SysAdjustSystemTimeEnable
*
* 功能描述: 校准系统时间使能
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysAdjustSystemTimeEnable(void);

/*
***********************************************************************************************************************
* 函数名称: SysSelectAdjustTimePulseSrc
*
* 功能描述: 校时脉冲源选择寄存器
*
* 输入参数: usPulseSrc: bit1-0:00：无外部校时源,01：主机架校时源，10：通讯模块校时源
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysSelectAdjustTimePulseSrc(uint16_t usPulseSrc);

/*
***********************************************************************************************************************
* 函数名称: SysWatchdogEnable
*
* 功能描述: 使能看门狗
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysWatchdogEnable(void);

/*
***********************************************************************************************************************
* 函数名称: SysWatchdogConfig
*
* 功能描述: 看门狗配置权限
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: WTD_CONFIG_ENABLE/WTD_CONFIG_DISABLE
***********************************************************************************************************************
*/
void SysWatchdogConfig(uint16_t usCfg);

/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogLowLimit
*
* 功能描述: 设置看门狗下限值
*
* 输入参数: 下限（单位：100us）
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogLowLimit(uint16_t usLowLimit);

/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogHighLimit
*
* 功能描述: 设置看门狗上限值
*
* 输入参数: 上限（单位：100us）
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogHighLimit(uint16_t usHighLimit);

/*
***********************************************************************************************************************
* 函数名称: SysGetWatchdogTestResult
*
* 功能描述: 获取看门狗自检结果
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 自检结果 0正常  1异常
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetWatchdogTestResult(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAModID
*
* 功能描述: 获取FPGA模块ID
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA模块ID
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAModID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAHardwareVer
*
* 功能描述: 获取FPGA硬件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA硬件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAHardwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAChipID
*
* 功能描述: 获取FPGA芯片位号
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA芯片位号
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAChipID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAFirmwareVer
*
* 功能描述: 获取FPGA固件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA固件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAFirmwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAFirmwareSubVer
*
* 功能描述: 获取FPGA固件子版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA固件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAFirmwareSubVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUModID
*
* 功能描述: 获取MCU模块ID
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU模块ID
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUModID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUHardwareVer
*
* 功能描述: 获取MCU硬件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU硬件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUHardwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUChipID
*
* 功能描述: 获取MCU芯片位号
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU芯片位号
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUChipID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUFirmwareVer
*
* 功能描述: 获取MCU固件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU固件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUFirmwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetSysTime
*
* 功能描述: 获取系统时间
*
* 输入参数: 无
*
* 输出参数: pstSysTime 指向系统时间
*
* 返 回 值  : 无
*
* 注意事项:
*
***********************************************************************************************************************
*/
void SysGetSysTime(SysTime_t *pstSysTime);

/*
***********************************************************************************************************************
* 函数名称: SysGetFreeCounterValue
*
* 功能描述: 获取自由计数器的值(单位 微秒)
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 自由计数器的值
*
* 注意事项:
***********************************************************************************************************************
*/
long64_t SysGetFreeCounterValue(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFreeCounterVal
*
* 功能描述: 获取自由计数器的值(单位 微秒)
*
* 输入参数: 无
*
* 输出参数: pstSysFCVal
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysGetFreeCounterVal(SysFCVal_t *pstSysFCVal);

/*
***********************************************************************************************************************
* 函数名称: SysSetTimingPulse
*
* 功能描述: 设置校时脉冲时间校准寄存器并使能(单位 微秒)
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetTimingPulse(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetTimingPulse
*
* 功能描述: 获取校时脉冲时间校准寄存器的值(单位 微秒)
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
uint32_t SysGetTimingPulse(void);

#endif /* SYS_HARDWARE_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

