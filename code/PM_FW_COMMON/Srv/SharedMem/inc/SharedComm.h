/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    : 共享内存
*
*  文件名称    : SharedComm.h
*
*  功能简介    : core0与core1间的消息通讯
*
*  作者            : 李琦
*
*  创建日期    : 2016-04-15
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef SHARED_COMM_H_
#define SHARED_COMM_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "inc/DataType.h"
#include "inc/Hardware.h"
#include "Srv/Sys/inc/CommSysCommon.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
#define MAX_SM_MSG_LEN                  (8000u)       /*最大请求或应答消息内容长度 */

#define SM_MSGBOX_LOCKED                (true)        /* 信箱被锁定*/
#define SM_MSGBOX_UNLOCKED              (false)       /* 信箱未锁定 */

#define SM_MSGBOX_FULL                  (true)        /* 信箱满 */
#define SM_MSGBOX_EMPTY                 (false)       /* 信箱空 */

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* -------------------通讯队列数据结构------------------------------------------------------------------------------------ */
/* 消息*/
typedef struct SMMsgTag
{
    uint16_t usLen;                                /* 消息内容长度 */
    uint16_t usReserved;
    uint8_t ucContent[MAX_SM_MSG_LEN];             /* 存放消息内容 */
} SMMsg_t;

/* 信箱 */
typedef struct SMMsgBoxTag
{
    uint32_t uiLock;                                /* 信箱是否可以被访问 */
    bool_t bMsgBoxStatus;                          /* 信箱的两种状态：空或满 */
    uint8_t ucReserved[3];
    SMMsg_t stMsg;                                 /* 消息 */
} SMMsgBox_t;

/* 消息类型（请求或应答）*/
typedef enum SMMsgTypeTag
{
    SM_SOE_REQ = 0,                                /* 请求 */
    SM_SOE_RESP = 1,                               /* 应答 */
    SM_CS1131_REQ = 2,                             /* 请求 */
    SM_CS1131_RESP = 3,                            /* 应答 */
    SM_OPC_REQ = 4,                                /* 请求 */
    SM_OPC_RESP = 5,                               /* 应答 */
    SM_CLIENT_REQ = 6,                             /* 请求 */
    SM_CLIENT_RESP = 7,                            /* 应答 */
    SM_AMS_REQ = 8,                                /* 请求 */
    SM_AMS_RESP = 9,                               /* 应答 */
    SM_P2P_REQ = 10,                               /* 请求 */
    SM_P2P_RESP = 11,                              /* 应答 */
    SM_MODBUS_REQ = 12,                            /* 请求 */
    SM_MODBUS_RESP = 13,                           /* 应答 */
    SM_CTRLSRV_REQ = 14,                           /* 请求 */
    SM_CTRLSRV_RESP = 15,                          /* 应答 */
    NUM_OF_SM_MSGTYPE
} SMMsgType_t;




/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/
/*
***********************************************************************************************************************
* 函数名称: SharedCommInit
*
* 功能描述: 初始化
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SharedCommInit(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetSMMsg
*
* 功能描述: 从共享内存中获取消息（请求/应答）
*
* 输入参数: emMsgType: 各种消息类型
*
* 输出参数: pucContent: 指向待读出的消息内容
*         pusLen: 指向待读出的消息内容长度
*
* 返 回 值  : true-收到消息
*        false- 1)无数据  2)不允许访问  3)输入输出参数错误
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SysGetSMMsg (SMMsgType_t emMsgType, CMController_t emCMIndex,puint8_t pucContent, puint16_t pusLen);

/*
***********************************************************************************************************************
* 函数名称: SysSetSMMsg
*
* 功能描述: 将请求或应答消息写入共享内存
*
* 输入参数: emMsgType: 各种消息类型
*        pucContent: 指向待写入的消息内容
*        pusLen: 指向待写入的消息内容长度
*
* 输出参数: 无
*
* 返 回 值  : 写入成功或失败
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SysSetSMMsg (SMMsgType_t emMsgType , CMController_t emCMIndex,puint8_t pucContent, uint16_t usLen);

#endif /* SHARED_COMM_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

