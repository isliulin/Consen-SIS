/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    :
*
*  文件名称    : CMLocalbus.h
*
*  功能简介    : 定义FPGA中的各寄存器地址
*
*  作者       : 李琦
*
*  创建日期    : 2016-05-23
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef CM_LOCALBUS_H_
#define CM_LOCALBUS_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "DataType.h"
#include "SysCommon.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
#define LOCALBUS_WRITE                      (0)
#define LOCALBUS_READ                       (1)

#define RECV_BUFF_NO1                             (0)
#define RECV_BUFF_NO2                             (1)


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             CMBUSA                                                                                */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSA_SEND_ENABLE            (0x00000000)   /*| WO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：无效,1：使能发送"                           */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_SEND_ENABLE_MASK            (0x0001U)
#define CMBUS_SEND_ENABLE_FLAG            (0x0001U)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_SEND_STATE             (0x00000002)   /*| RO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：发送完成,1：正在发送"                         */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_SNED_STATE_MASK             (0x0001U)
#define CMBUS_SNED_FINISHED               (0x0000U)
#define CMBUS_SNED_NOT_FINISHED           (0x0001U)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_SEND_LEN               (0x00000004)   /*| WO   |  "Bit15-14:保留 "                                  */
                                                         /*|      |  "Bit13-0：发送数据长度，最大8k"                        */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_SNED_LEN_MASK               (0x03FFFU)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_RECV_STATE             (0x00000006)   /*| RW   |  "bit15-10：保留 "                                  */
                                                         /*|      |  "bit9:0:buffer2包接收正确，1：buffer2包接收错误"        */
                                                         /*|      |  "bit8:0:buffer2未接收到数据，1：buffer2接收到数据"       */
                                                         /*|      |  "bit7-2：保留"                                    */
                                                         /*|      |  "bit1:0:buffer1包接收正确，1：buffer1包接收错误"        */
                                                         /*|      |  "bit0:0:buffer1未接收到数据，1：buffer1接收到数据"       */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_RECV_BUF1_HAS_DATA_MASK          (0x00000001)
#define CMBUS_RECV_BUF1_HAS_DATA               (0x00000001)
#define CMBUS_RECV_BUF1_DATA_CORRECT_MASK      (0x00000002)
#define CMBUS_RECV_BUF1_DATA_CORRECT           (0x00000000)
#define CMBUS_RECV_BUF2_HAS_DATA_MASK          (0x00000100)
#define CMBUS_RECV_BUF2_HAS_DATA               (0x00000100)
#define CMBUS_RECV_BUF2_DATA_CORRECT_MASK      (0x00000200)
#define CMBUS_RECV_BUF2_DATA_CORRECT           (0x00000000)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_RECV1_LEN              (0x00000008)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_RECV1_LEN_MASK              (0x03FFFU)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_RECV1_TIME             (0x0000000A)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_RECV1_TIME_MASK             (0x003FFU)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_RECV2_LEN              (0x0000000C)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_RECV2_LEN_MASK              (0x03FFFU)

/*-------------------------------------------------------------------------------------------------------------------*/
#define REG_CMBUSA_RECV2_TIME             (0x0000000E)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*-------------------------------------------------------------------------------------------------------------------*/
#define CMBUS_RECV2_TIME_MASK             (0x003FFU)

/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             CMBUSB                                                                                */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_SEND_ENABLE            (0x00000020)   /*| WO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：无效,1：使能发送"                           */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_SEND_STATE             (0x00000022)   /*| RO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：发送完成,1：正在发送"                         */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_SEND_LEN               (0x00000024)   /*| WO   |  "Bit15-14:保留 "                                  */
                                                         /*|      |  "Bit13-0：发送数据长度，最大8k"                        */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_RECV_STATE             (0x00000026)   /*| RW   |  "bit15-10：保留 "                                  */
                                                         /*|      |  "bit9:0:buffer2包接收正确，1：buffer2包接收错误"        */
                                                         /*|      |  "bit8:0:buffer2未接收到数据，1：buffer2接收到数据"       */
                                                         /*|      |  "bit7-2：保留"                                    */
                                                         /*|      |  "bit1:0:buffer1包接收正确，1：buffer1包接收错误"        */
                                                         /*|      |  "bit0:0:buffer1未接收到数据，1：buffer1接收到数据"       */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_RECV1_LEN              (0x00000028)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_RECV1_TIME             (0x0000002A)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_RECV2_LEN              (0x0000002C)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSB_RECV2_TIME             (0x0000002E)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             CMBUSC                                                                                */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_SEND_ENABLE            (0x00000040)   /*| WO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：无效,1：使能发送"                           */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_SEND_STATE             (0x00000042)   /*| RO   |  "Bit15-1:保留 "                                   */
                                                         /*|      |  "Bit0:0：发送完成,1：正在发送"                         */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_SEND_LEN               (0x00000044)   /*| WO   |  "Bit15-14:保留 "                                  */
                                                         /*|      |  "Bit13-0：发送数据长度，最大8k"                        */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_RECV_STATE             (0x00000046)   /*| RW   |  "bit15-10：保留 "                                  */
                                                         /*|      |  "bit9:0:buffer2包接收正确，1：buffer2包接收错误"        */
                                                         /*|      |  "bit8:0:buffer2未接收到数据，1：buffer2接收到数据"       */
                                                         /*|      |  "bit7-2：保留"                                    */
                                                         /*|      |  "bit1:0:buffer1包接收正确，1：buffer1包接收错误"        */
                                                         /*|      |  "bit0:0:buffer1未接收到数据，1：buffer1接收到数据"       */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_RECV1_LEN              (0x00000048)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_RECV1_TIME             (0x0000004A)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_RECV2_LEN              (0x0000004C)   /*| RO   |  "bit15-14：保留 "                                  */
                                                         /*|      |  "bit13-0：接收数据长度，最大8k byte"                   */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CMBUSC_RECV2_TIME             (0x0000004E)   /*| RO   |  "bit15-10：保留"                                  */
                                                         /*|      |  "bit9-0：报文接收时间计时，单位ms"                      */
/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             INTERFACE                                                                             */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_SLOT_ADDR                     (0x00000060)   /*| RO   |  "Bit15：插稳指示。0：未插稳，1：插稳"                    */
                                                         /*|      |  "Bit14-12：保留"                                  */
                                                         /*|      |  "Bit11-8:B套槽地址"                                */
                                                         /*|      |  "Bit7：插稳指示。0：未插稳，1：插稳"                     */
                                                         /*|      |  "Bit6-4：保留"                                    */
                                                         /*|      |  "Bit3-0:A套槽地址"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_PM_ONLINE_FLAG                (0x00000062)   /*| RO   |  "Bit15-3:保留 "                                   */
                                                         /*|      |  "Bit2：PM_C在线标志。0：离线，1：在线"                   */
                                                         /*|      |  "Bit1：PM_B在线标志。0：离线，1：在线"                   */
                                                         /*|      |  "Bit0：PM_A在线标志。0：离线，1：在线"                   */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MONITOR_STATE                 (0x00000064)   /*| RO   |  "Bit15-3:保留 "                                   */
                                                         /*|      |  "Bit2：24V2报警位。0：故障，1：正常"                    */
                                                         /*|      |  "Bit1：24V1报警位。0：故障，1：正常"                    */
                                                         /*|      |  "Bit0：电池报警位。0：故障，1：正常"                      */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MONITOR_TEMPERATURE           (0x00000066)   /*| RO   |  "Bit15：温度数据有效位。0：无效，1：有效 "                  */
                                                         /*|      |  "Bit14:符号位 0为正1为负"                             */
                                                         /*|      |  "Bit10-4:温度值整数部分"                             */
                                                         /*|      |  "Bit3-0:温度值小数部分"                              */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_CONTROL_STATE_LED             (0x00000068)   /*| WO   |  "Bit15-6：保留 "                                   */
                                                         /*|      |  "Bit5-4：ACTIVE灯控制位。00：灭，01：亮，10：闪，其他未定义"  */
                                                         /*|      |  "Bit3-2：FAULT灯控制位。00：灭，01：亮，其他未定义"         */
                                                         /*|      |  "Bit1-0：PASS灯控制位。00：灭，01：亮，其他未定义"          */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_COMM_LED                      (0x0000006A)   /*| WO   |  "Bit15-2:保留"                                   */
                                                         /*|      |  "Bit1-0：CM_BUS灯控制位。00：灭，01：亮，10：闪，其他未定义" */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_STATION_ADDR                  (0x0000006C)   /*| WO   |  "Bit15-4：保留 "                                  */
                                                         /*|      |  "Bit3-0:模块站地址"                                */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MCU_STATE                     (0x0000006E)   /*| RO   |  "Bit15-1：保留 "                                  */
                                                         /*|      |  "Bit0:MCU状态位。0：故障，1：正常"                     */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PLUSE_MONITOR                 (0x00000070)   /*| WO   |  "Bit15-2：保留 "                                 */
                                                         /*|      |  "Bit1:串口1输入分钟状态位。0：故障，1：正常"     */
                                                         /*|      |  "Bit0:串口4输入秒脉冲状态位。0：故障，1：正常"   */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_ALARM                         (0x00000072)   /*| WO   |  "Bit15-1：保留 "                                 */
                                                         /*|      |  "Bit0:报警位。0：无故障，1：有故障"              */
/*——————————————————————————————————————————————————————————*/
/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             MAIN TO BACKUP SWITCH                                                                 */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MAIN_BACKUP_STATE             (0x00000080)   /*| RO   |  "Bit15-2：保留"                                   */
                                                         /*|      |  "Bit1：对模块主备状态。0：备用，1：主用"                  */
                                                         /*|      |  "Bit0：本模块主备状态。0：备用，1：主用"                  */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MAIN_OR_BACKUP_ENABLE         (0x00000082)   /*| WO   |  "写入0xA5A5指示升主使能，写入0x5A5A指示降备使能，写入其他值无效。"*/
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             Serial Port 1: Modbus                                                                  */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_TRANS_PROTO          (0x000000A0)   /*| WO   |  "0: Modbus RTU; 1: Modbus ASCII"                 */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_BAUD_RATE            (0x000000A2)   /*| WO   |  "0: 1200bps;  1: 2400bps; 2: 4800bps; 3: 9600bps"*/
                                                         /*|      |  "4: 19200bps; 5: 38400bps"                       */
                                                         /*|      |  "6: 57600bps; 7: 115200bps"                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_TRANS_MODE           (0x000000A4)   /*| WO   |  "0: RS-485; 1: RS-422"                           */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_PARITY               (0x000000A6)   /*| WO   |  "0: None; 1: Odd; 2: Even"                       */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_ENABLE               (0x000000A8)   /*| WO   |  "bit15-1: Reserve"                               */
                                                         /*|      |  "bit0: 0: Disable; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_SEND_ENABLE          (0x000000AA)   /*| WO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Invalid; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_SEND_STATUS          (0x000000AC)   /*| RO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Send Completed; 1: Sending"            */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_SEND_LEN             (0x000000AE)   /*| WO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Send Data Length, Max 256B"             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_RECV_STATUS          (0x000000B0)   /*| RW   |  "bit15-2: Reserve"                               */
                                                         /*| (WC) |  "bit1:0: Recv Successfully; 1: Recv Failed"      */
                                                         /*|      |  "bit0:0: Recv None;         1: Received Message" */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL1_MB_RECV_LEN             (0x000000B2)   /*| RO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Recv Data Length, Max 256B"             */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             Serial Port 2: Modbus                                                                  */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_TRANS_PROTO          (0x000000C0)   /*| WO   |  "0: Modbus RTU; 1: Modbus ASCII"                 */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_BAUD_RATE            (0x000000C2)   /*| WO   |  "0: 1200bps;  1: 2400bps; 2: 4800bps; 3: 9600bps"*/
                                                         /*|      |  "4: 19200bps; 5: 38400bps"                       */
                                                         /*|      |  "6: 57600bps; 7: 115200bps"                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_TRANS_MODE           (0x000000C4)   /*| WO   |  "0: RS-485; 1: RS-422"                           */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_PARITY               (0x000000C6)   /*| WO   |  "0: None; 1: Odd; 2: Even"                       */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_ENABLE               (0x000000C8)   /*| WO   |  "bit15-1: Reserve"                               */
                                                         /*|      |  "bit0: 0: Disable; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_SEND_ENABLE          (0x000000CA)   /*| WO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Invalid; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_SEND_STATUS          (0x000000CC)   /*| RO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Send Completed; 1: Sending"            */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_SEND_LEN             (0x000000CE)   /*| WO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Send Data Length, Max 256B"             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_RECV_STATUS          (0x000000D0)   /*| RW   |  "bit15-2: Reserve"                               */
                                                         /*| (WC) |  "bit1:0: Recv Successfully; 1: Recv Failed"      */
                                                         /*|      |  "bit0:0: Recv None;         1: Received Message" */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL2_MB_RECV_LEN             (0x000000D2)   /*| RO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Recv Data Length, Max 256B"             */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             Serial Port 3: Modbus                                                                  */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_TRANS_PROTO          (0x000000E0)   /*| WO   |  "0: Modbus RTU; 1: Modbus ASCII"                 */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_BAUD_RATE            (0x000000E2)   /*| WO   |  "0: 1200bps;  1: 2400bps; 2: 4800bps; 3: 9600bps"*/
                                                         /*|      |  "4: 19200bps; 5: 38400bps"                       */
                                                         /*|      |  "6: 57600bps; 7: 115200bps"                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_TRANS_MODE           (0x000000E4)   /*| WO   |  "0: RS-485; 1: RS-422"                           */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_PARITY               (0x000000E6)   /*| WO   |  "0: None; 1: Odd; 2: Even"                       */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_ENABLE               (0x000000E8)   /*| WO   |  "bit15-1: Reserve"                               */
                                                         /*|      |  "bit0: 0: Disable; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_SEND_ENABLE          (0x000000EA)   /*| WO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Invalid; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_SEND_STATUS          (0x000000EC)   /*| RO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Send Completed; 1: Sending"            */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_SEND_LEN             (0x000000EE)   /*| WO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Send Data Length, Max 256B"             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_RECV_STATUS          (0x000000F0)   /*| RW   |  "bit15-2: Reserve"                               */
                                                         /*| (WC) |  "bit1:0: Recv Successfully; 1: Recv Failed"      */
                                                         /*|      |  "bit0:0: Recv None;         1: Received Message" */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL3_MB_RECV_LEN             (0x000000F2)   /*| RO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Recv Data Length, Max 256B"             */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             Serial Port 4: Modbus                                                                  */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_TRANS_PROTO          (0x00000100)   /*| WO   |  "0: Modbus RTU; 1: Modbus ASCII"                 */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_BAUD_RATE            (0x00000102)   /*| WO   |  "0: 1200bps;  1: 2400bps; 2: 4800bps; 3: 9600bps"*/
                                                         /*|      |  "4: 19200bps; 5: 38400bps"                       */
                                                         /*|      |  "6: 57600bps; 7: 115200bps"                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_TRANS_MODE           (0x00000104)   /*| WO   |  "0: RS-485; 1: RS-422"                           */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_PARITY               (0x00000106)   /*| WO   |  "0: None; 1: Odd; 2: Even"                       */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_ENABLE               (0x00000108)   /*| WO   |  "bit15-1: Reserve"                               */
                                                         /*|      |  "bit0: 0: Disable; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_SEND_ENABLE          (0x0000010A)   /*| WO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Invalid; 1: Enable"                    */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_SEND_STATUS          (0x0000010C)   /*| RO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: Send Completed; 1: Sending"            */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_SEND_LEN             (0x0000010E)   /*| WO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Send Data Length, Max 256B"             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_RECV_STATUS          (0x00000110)   /*| RW   |  "bit15-2: Reserve"                               */
                                                         /*| (WC) |  "bit1:0: Recv Successfully; 1: Recv Failed"      */
                                                         /*|      |  "bit0:0: Recv None;         1: Received Message" */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SERL4_MB_RECV_LEN             (0x00000112)   /*| RO   |  "Bit15-9: Reserve"                               */
                                                         /*|      |  "Bit8-0: Recv Data Length, Max 256B"             */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/

/* Modbus Transport Mode */
#define MB_TRANS_PROTO_RTU                (0)
#define MB_TRANS_PROTO_ASCII              (1)

/* Bit */
#define MB_SERL_PORT_ENABLE_BIT           (0x0001)    /* Port Enable Bit */
#define MB_SERL_PORT_SEND_ENABLE_BIT      (0x0001)    /* Port Send Enable Bit */
#define MB_SERL_PORT_SEND_CMP_BIT         (0x0001)    /* Port Send Completed Bit */

#define MB_SERL_PORT_HAS_FRAME_BIT        (0x0001)    /* Port Has Frame Bit */
#define MB_SERL_PORT_RECV_ERROR_BIT       (0x0002)    /* Port Receive Error Bit */

/* Status */
#define MB_SERL_PORT_SEND_CMPL_STATUS     (0)          /* Send Completed Status */
#define MB_SERL_PORT_SENDING_STATUS       (1)          /* Sending Status */

/* Length */
#define MAX_MB_SERL_MSG_LEN               (256)        /* 256 Bytes */

/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             WATCHDOG                                                                              */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_WATCHDOG_EN                   (0x00000120)   /*| RW   |  "bit15-1:保留 bit0:0：无效,1：使能看门狗"               */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_WATCHDOG_PERMISSION           (0x00000122)   /*| WO   |  "bit15-1:保留 bit0:0：禁止配置,1：允许配置"              */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_WATCHDOG_LIMIT_LOW            (0x00000124)   /*| RW   |  "单位us"                                         */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_WATCHDOG_LIMIT_HIGH           (0x00000126)   /*| RW   |  "单位us"                                          */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/

#define WATCHDOG_ENABLE                              (1U)
#define WATCHDOG_DISABLE                             (0U)
#define WATCHDOG_PERMISSION_ENABLE                   (1U)
#define WATCHDOG_PERMISSION_DISABLE                  (0U)


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             FREE COUNTER                                                                          */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FREE_COUNTER_1                (0x00000140)   /*| RO   |  "bit15-0 (单位us)"                               */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FREE_COUNTER_2                (0x00000142)   /*| RO   |  "bit31-16"                                      */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FREE_COUNTER_3                (0x00000144)   /*| RO   |  "bit47-32"                                      */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FREE_COUNTER_4                (0x00000146)   /*| RO   |  "bit63-48"                                      */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*———————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                             VERSION                                                                              */
/*-------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                     */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FPGA_MOD_ID                   (0x00000160)   /*| RO   |  "bit15-0:模块ID"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FPGA_HW_VER                   (0x00000162)   /*| RO   |  "bit15-0:硬件版本"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FPGA_CHIP_ID                  (0x00000164)   /*| RO   |  "bit15-0:芯片位号"                                */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_FPGA_FW_VER                   (0x00000166)   /*| RO   |  "bit15-0:固件版本"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MCU_MOD_ID                    (0x00000168)   /*| RO   |  "bit15-0:模块ID"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MCU_HW_VER                    (0x0000016A)   /*| RO   |  "bit15-0:硬件版本"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MCU_CHIP_ID                   (0x0000016C)   /*| RO   |  "bit15-0:芯片位号"                                 */
/*---------------------------------------------------------|------|--------------------------------------------------*/
#define REG_MCU_FW_VER                    (0x0000016E)   /*| RO   |  "bit15-0:固件版本"                                 */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                                          PPM                                                                       */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PPM_ADJ_PULSE_INPUT           (0x00000180)   /*| WO   |  "bit15-2:保留 "                                   */
                                                         /*|      |  "bit1-0:01：GPS校时源,10：站间校时源，其他：无校时源"*/
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PPM_ADJ_PULSE_TRANSMIT        (0x00000182)   /*| WO   |  "bit15-1:保留"                                   */
                                                         /*|      |  "bit0:0：不支持,1：支持"                          */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PPM_GPS_ADJ_PULSE_POLARITY    (0x00000184)   /*| WO   |  "bit15-1:保留"                                   */
                                                         /*|      |  "bit0:0：正脉冲,1：负脉冲"                        */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PPM_PPS_COUNTER_INIT_VAL      (0x00000186)   /*| WO   |  "bit15-6:保留"                                   */
                                                         /*|      |  "bit5-0:当前分钟内秒值"                           */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_PPM_PPS_COUNTER_INIT_VAL_EN   (0x00000188)   /*| WO   |  "bit15-1:保留"                                   */
                                                         /*|      |  "bit0:0：无效,1：使能PPS计数初值设定"              */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/

#define PPM_PPS_COUNTER_INIT_VAL_ENABLE                       (0U) //1：使能PPS计数初值设定
#define PPM_PPS_COUNTER_INIT_VAL_DISABLE                      (1U) //0：无效


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                                           Trimble                                                                  */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_ENABLE                   (0x000001A0)   /*| WO   |  "0: Disable; 1: Enable"                          */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_BAUD_RATE                (0x000001A2)   /*| WO   |  "0: 1200bps;  1: 2400bps; 2: 4800bps; 3: 9600bps"*/
                                                         /*|      |  "4: 19200bps; 5: 38400bps"                       */
                                                         /*|      |  "6: 57600bps; 7: 115200bps"                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_DATA_BITS                (0x000001A4)   /*| WO   |  "0: 7 Bit; 1: 8 Bit"                             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_PARITY                   (0x000001A6)   /*| WO   |  "0: None; 1: Odd; 2: Even"                       */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_STOP_BITS                (0x000001A8)   /*| WO   |  "0: 1 Bit; 1: 2 Bit"                             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_RECV_STS                 (0x000001AA)   /*| RO   |  "Bit15-3: Reserve"                               */
                                                         /*|      |  "Bit2: 0: RecvFIFO Empty; 1: RecvFIFO Not Empty" */
                                                         /*|      |  "Bit1: 0: Recv OK;        1: Recv Failed"        */
                                                         /*|      |  "Bit0: 0: Recv Not Done;  1: Recv Done"          */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_RECV_BUFF                (0x000001AC)   /*| RO   |  "Bit15-8: Reserve"                               */
                                                         /*|      |  "Bit7-0: Valid Data"                             */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_SEND_STS                 (0x000001AE)   /*| RO   |  "Bit15-1: Reserve"                               */
                                                         /*|      |  "Bit0: 0: SendFIFO Not Empty; 1: SendFIFO Full"  */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_TRIM_SEND_BUFF                (0x000001B0)   /*| WO   |  "bit15-8: Reserve"                               */
                                                         /*|      |  "bit1:0: Recv Successfully; 1: Recv Failed"      */
                                                         /*|      |  "Bit7-0: Valid Data"                             */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/

#define GPS_PORT_HAS_FRAME_BIT      (0x0001)    /* GPS Port Has Frame Bit */
#define GPS_PORT_RECV_ERROR_BIT     (0x0002)    /* GPS Port Received Error Bit */
#define GPS_PORT_RECV_FIFO_BIT      (0x0004)    /* GPS Port Receive FIFO Bit */


/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/*                                           System Time                                                              */
/*--------------------------------------------------------------------------------------------------------------------*/
/*      REGISTER NAME                       OFFSET         | R/W  |  DESCRIPTION                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_REG1                  (0x000001C0)   /*| RO   |  "Bit 15-0(us)"                                   */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_REG2                  (0x000001C2)   /*| RO   |  "Bit 31-16"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_REG3                  (0x000001C4)   /*| RO   |  "Bit 47-32"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_REG4                  (0x000001C6)   /*| RO   |  "Bit 63-48"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_ADJ_REG1              (0x000001C8)   /*| WO   |  "Bit 15-0(us)"                                   */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_ADJ_REG2              (0x000001CA)   /*| WO   |  "Bit 31-16"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_ADJ_REG3              (0x000001CC)   /*| WO   |  "Bit 47-32"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_ADJ_REG4              (0x000001CE)   /*| WO   |  "Bit 63-48"                                      */
/*---------------------------------------------------------|------|---------------------------------------------------*/
#define REG_SYSTIME_ADJ_EN                (0x000001D0)   /*| WO   |  "bit15-1: Reserve"                               */
                                                         /*|      |  "bit1:0: Invalid; 1: Enable"                     */
/*————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/


/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/*
         功能块              描述                   基地址              空间大小
BAR0        DDR          DDR映射区    0x00000000     0x000fffff 1M
         CMBUS_A                  发送buffer      0x00400000     0x00401fff        8k
                            接收buffer1    0x00402000     0x00403fff        8k
                            接收buffer2    0x00404000     0x00405fff        8k
         CMBUS_B                  发送buffer      0x00406000     0x00407fff        8k
                            接收buffer1    0x00408000     0x00409fff        8k
                            接收buffer2    0x0040A000     0x0040bfff        8k
         CMBUS_C                  发送buffer      0x0040C000     0x0040dfff        8k
                            接收buffer1    0x0040E000     0x0040ffff         8k
                            接收buffer2    0x00410000     0x00411fff        8k
BAR2        CRA                             0X00800000     0X00803fff        16K
         DMA                                     0X00804000     0X0080403f      64 byte
         DMA Descriptor                         0X00805000     0X008050ff       256 byte

*/

enum PCIEBUS_OPS_TYPE {
    CMBUSA_SEND,
    CMBUSA_RECV1,
    CMBUSA_RECV2,

    CMBUSB_SEND,
    CMBUSB_RECV1,
    CMBUSB_RECV2,

    CMBUSC_SEND,
    CMBUSC_RECV1,
    CMBUSC_RECV2,

    PCIE_MOBUSD_SEND,
    PCIE_MOBUSD_RECV,

    PCIE_MOBUSE_SEND,
    PCIE_MOBUSE_RECV,

    PCIE_MOBUSF_SEND,
    PCIE_MOBUSF_RECV,

    PCIE_MOBUSG_SEND,
    PCIE_MOBUSG_RECV
};


/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/
/*
***********************************************************************************************************************
* 函数名称: CMLocalbusInit
*
* 功能描述: 初始化
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void CMLocalbusInit(void);

/*
***********************************************************************************************************************
* 函数名称: GetCMSlotAddr
*
* 功能描述: 获取CM槽号
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : CM的槽号
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t GetCMSlotAddr(int32_t iTimeout);

/*
***********************************************************************************************************************
* 函数名称: SetCMSlotAddr
*
* 功能描述: 设置CM槽号
*
* 输入参数: 槽号
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SetCMSlotAddr(uint32_t uiAddr);

/*
***********************************************************************************************************************
* 函数名称: SetCMSendEnable
*
* 功能描述: 发送使能
*
* 输入参数: PM的地址
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SetCMSendEnable(uint32_t uiPMAddr);

/*
***********************************************************************************************************************
* 函数名称: GetCMSendState
*
* 功能描述: 获取发送状态
*
* 输入参数: PM的地址
*
* 输出参数: uiAddr PM的地址
*
* 返 回 值  : 状态
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t GetCMSendState(uint32_t uiPMAddr);

/*
***********************************************************************************************************************
* 函数名称: SetCMSendLen
*
* 功能描述: 设置发送数据长度
*
* 输入参数: PM的地址
*
* 输出参数: uiAddr PM的地址
*        uiLen  数据长度
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SetCMSendLen(uint32_t uiPMAddr, uint32_t uiLen);

/*
***********************************************************************************************************************
* 函数名称: CMSend
*
* 功能描述: 发送数据
*
* 输入参数: PM的地址
*
* 输出参数: uiAddr PM的地址
*        uiLen  数据长度
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void CMSend(uint32_t uiPMAddr, puint8_t pSendBuf, uint32_t uiLen, int32_t iTimeout);

/*
***********************************************************************************************************************
* 函数名称: ClearCMRecvState
*
* 功能描述: 接收状态
*
* 输入参数: uiPMAddr PM的地址
*        usClr: 对状态位进行清除操作
*
* 输出参数:
*
* 返 回 值  : 时间
*
* 注意事项: 无
***********************************************************************************************************************
*/
void ClearCMRecvState(uint32_t uiPMAddr, uint16_t usClr);
/*
***********************************************************************************************************************
* 函数名称: GetCMRecvState
*
* 功能描述: 接收状态
*
* 输入参数: uiPMAddr PM的地址
*
* 输出参数:
*
* 返 回 值  : 时间
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t GetCMRecvState(uint32_t uiPMAddr);

/*
***********************************************************************************************************************
* 函数名称: GetCMRecvTime
*
* 功能描述: 接收时间
*
* 输入参数: uiPMAddr PM的地址
*        uiBufNo  接收缓冲区索引
*
* 输出参数:
*
* 返 回 值  : 时间
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t GetCMRecvTime(uint32_t uiPMAddr, uint8_t uiBufNo);

/*
***********************************************************************************************************************
* 函数名称: GetCMRecvLen
*
* 功能描述: 接收数据长度
*
* 输入参数: uiPMAddr PM的地址
*        uiBufNo  接收缓冲区索引
*
* 输出参数:
*
* 返 回 值  : 数据长度
*
* 注意事项: 无
***********************************************************************************************************************
*/
uint32_t GetCMRecvLen(uint32_t uiPMAddr, uint8_t uiBufNo);

/*
***********************************************************************************************************************
* 函数名称: CMRecvBuf
*
* 功能描述: 接收数据
*
* 输入参数:
*
* 输出参数:
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void CMReceive(uint32_t uiPMAddr, uint8_t uiBufNo, puint8_t pucBuf);

/*
***********************************************************************************************************************
* 函数名称: SetMBTransProto
*
* 功能描述: 设置 Modbus 传输协议：ASCII / RTU
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          usTransProto：传输协议，0: Modbus RTU; 1: Modbus ASCII.
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBTransProto( SerialPortType_t emSerlPortID, uint16_t usTransProto );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortBaudRate
*
* 功能描述: 设置 Modbus 串口波特率
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          usBaudRate：波特率。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortBaudRate( SerialPortType_t emSerlPortID, uint16_t usBaudRate );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortTransMode
*
* 功能描述: 设置 Modbus 串口收发(Transceiver)模式：RS485 / RS422
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          usTransMode：收发模式: 0-RS485; 1-RS422。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortTransMode( SerialPortType_t emSerlPortID, uint16_t usTransMode );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortParity
*
* 功能描述: 设置 Modbus 串口奇偶校验
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          usParity：奇偶校验。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortParity( SerialPortType_t emSerlPortID, uint16_t usParity );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortEnable
*
* 功能描述: 使能/禁止 Modbus 串口
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          bEnable：使能标志位。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortEnable( SerialPortType_t emSerlPortID, bool_t bEnable );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortSendEnable
*
* 功能描述: 设置 Modbus 串口发送使能标志
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          bSendEnable：发送使能标志位。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortSendEnable( SerialPortType_t emSerlPortID, bool_t bSendEnable );

/*
***********************************************************************************************************************
* 函数名称: SetMBPortSendLen
*
* 功能描述: 设置 Modbus 串口发送长度
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          usSendLen：发送长度。
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetMBPortSendLen( SerialPortType_t emSerlPortID, uint16_t usSendLen );

/*
***********************************************************************************************************************
* 函数名称: GetMBPortSendStatus
*
* 功能描述: 获取 Modbus 串口发送状态
*
* 输入参数: emSerlPortID：Modbus 串口ID
*
* 输出参数: 无
*
* 返 回 值  : Modbus 串口发送状态
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetMBPortSendStatus( SerialPortType_t emSerlPortID );

/*
***********************************************************************************************************************
* 函数名称: GetMBPortRecvLen
*
* 功能描述: 获取 Modbus 串口接收长度
*
* 输入参数: emSerlPortID：Modbus 串口ID
*
* 输出参数: 无
*
* 返 回 值  : Modbus 串口接收长度
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetMBPortRecvLen( SerialPortType_t emSerlPortID );

/*
***********************************************************************************************************************
* 函数名称: GetMBPortRecvStatus
*
* 功能描述: 获取 Modbus 串口接收状态
*
* 输入参数: emSerlPortID：Modbus 串口ID
*
* 输出参数: 无
*
* 返 回 值  : Modbus 串口接收状态
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetMBPortRecvStatus( SerialPortType_t emSerlPortID );

/*
***********************************************************************************************************************
* 函数名称: ResetMBPortRecvStatus
*
* 功能描述: 复位 Modbus 串口接收状态
*
* 输入参数: emSerlPortID：Modbus 串口ID
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 通过此方式清除接收缓冲区中的数据
***********************************************************************************************************************
*/

void ResetMBPortRecvStatus( SerialPortType_t emSerlPortID );

/*
***********************************************************************************************************************
* 函数名称: IsMBPortSendCompleted
*
* 功能描述: 判断 Modbus 串口是否发送完成
*
* 输入参数: emSerlPortID：Modbus 串口ID
*
* 输出参数: 无
*
* 返 回 值  : 是否发送完成
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsMBPortSendCompleted( SerialPortType_t emSerlPortID );

/*
***********************************************************************************************************************
* 函数名称: IsMBPortRecvedFrame
*
* 功能描述: 判断 Modbus 串口是否接收到报文
*
* 输入参数: usRecvStatus：串口接收状态
*
* 输出参数: 无
*
* 返 回 值  : 是否接收到报文标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsMBPortRecvedFrame( uint16_t usRecvStatus );

/*
***********************************************************************************************************************
* 函数名称: IsMBPortRecvedError
*
* 功能描述: 判断 Modbus 串口是否发生接收错误
*
* 输入参数: usRecvStatus：串口接收状态
*
* 输出参数: 无
*
* 返 回 值  : 是否接收错误标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsMBPortRecvedError( uint16_t usRecvStatus );

/*
***********************************************************************************************************************
* 函数名称: PCIEModbusSend
*
* 功能描述: 发送数据
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          pucBuff：待发送数据的首地址；
*          uiLen：待发送数据的长度。
*
* 输出参数: 无
*
* 返 回 值  : 是否发送成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PCIEModbusSend( SerialPortType_t emSerlPortID, uint8_t const *pucBuff, uint32_t uiLen );

/*
***********************************************************************************************************************
* 函数名称: MBPortSend
*
* 功能描述: Modbus 串口发送报文
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          pucBuff：待发送数据的首地址；
*          usLen：待发送数据的长度。
*
* 输出参数: 无
*
* 返 回 值  : 是否发送成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t MBPortSend( SerialPortType_t emSerlPortID, uint8_t const *pucBuff, uint16_t usLen );

/*
***********************************************************************************************************************
* 函数名称: PCIEModbusReceive
*
* 功能描述: 接收数据
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          pucBuff：接收缓冲区首地址；
*          uiRecvLen：数据长度。
*
* 输出参数: 无
*
* 返 回 值  : 是否接收成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PCIEModbusReceive( SerialPortType_t emSerlPortID, puint8_t pucBuff, uint32_t uiRecvLen );

/*
***********************************************************************************************************************
* 函数名称: MBPortRecv
*
* 功能描述: Modbus 串口接收报文
*
* 输入参数: emSerlPortID：Modbus 串口ID；
*          pucBuff：接收缓冲区首地址；
*          pusLen：接收缓冲区的长度。
*
* 输出参数: pusLen：数据的实际长度
*
* 返 回 值  : 是否接收成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t MBPortRecv( SerialPortType_t emSerlPortID, uint8_t *pucBuff, uint16_t *pusLen );

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAModID
*
* 功能描述: 获取FPGA模块ID
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA模块ID
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAModID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAHardwareVer
*
* 功能描述: 获取FPGA硬件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA硬件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAHardwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAChipID
*
* 功能描述: 获取FPGA芯片位号
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA芯片位号
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAChipID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFPGAFirmwareVer
*
* 功能描述: 获取FPGA固件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : FPGA固件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetFPGAFirmwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUModID
*
* 功能描述: 获取MCU模块ID
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU模块ID
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUModID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUHardwareVer
*
* 功能描述: 获取MCU硬件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU硬件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUHardwareVer(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUChipID
*
* 功能描述: 获取MCU芯片位号
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU芯片位号
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUChipID(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMCUFirmwareVer
*
* 功能描述: 获取MCU固件版本
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU固件版本
*
* 注意事项:
***********************************************************************************************************************
*/
uint16_t SysGetMCUFirmwareVer(void);


uint16_t SysGetCMTemp(void);

uint16_t SysGetMCUState(void);

uint16_t SysGetPluseState(void);

uint16_t SysGetPowerState(void);

/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogEnState
*
* 功能描述: 设置看门狗使能或禁止
*
* 输入参数: uiState：bit0:0：无效,1：使能看门狗
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogEnState(uint32_t uiState);


/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogPermission
*
* 功能描述: 设置看门狗权限
*
* 输入参数: uiState：bit0:0：禁止配置,1：允许配置
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogPermission(uint32_t uiState);


/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogLowLimit
*
* 功能描述: 设置看门狗下限
*
* 输入参数: uiTime：单位us
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogLowLimit(uint32_t uiTime);


/*
***********************************************************************************************************************
* 函数名称: SysSetWatchdogHighLimit
*
* 功能描述: 设置看门狗上
*
* 输入参数: uiTime：单位us
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetWatchdogHighLimit(uint32_t uiTime);


/*
***********************************************************************************************************************
* 函数名称: SysGetFreeCounterValue
*
* 功能描述: 获取自由计数器的值
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 自由计数器的值
*
* 注意事项:
***********************************************************************************************************************
*/
long64_t SysGetFreeCounterValue(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetFreeCounterValue32
*
* 功能描述: 获取自由计数器的低32位值
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 自由计数器的值
*
* 注意事项:
***********************************************************************************************************************
*/
uint32_t SysGetFreeCounterValue32(void);

/*
***********************************************************************************************************************
* 函数名称: SysSetPPMAdjPulseInput
*
* 功能描述: 校时脉冲源选择
*
* 输入参数: uiPulseInput bit1-0:01：GPS校时源,10：站间校时源，其他：无校时源
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetPPMAdjPulseInput(uint32_t uiPulseInput);


/*
***********************************************************************************************************************
* 函数名称: SysSetPPMAdjPulseTransmit
*
* 功能描述: 校时脉冲转发功能
*
* 输入参数: uiPulseTransmit bit0:0：不支持,1：支持
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetPPMAdjPulseTransmit(uint32_t uiPulseTransmit);


/*
***********************************************************************************************************************
* 函数名称: SysSetPPMAdjPulsePolarity
*
* 功能描述: GPS校时脉冲极性选择
*
* 输入参数: uiPulsePolarity bit0:0：正脉冲,1：负脉冲
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetPPMAdjPulsePolarity(uint32_t uiPulsePolarity);

/*
***********************************************************************************************************************
* 函数名称: SysSetPPSCounterInitVal
*
* 功能描述: PPS计数初值
*
* 输入参数: uiInitVal bit5-0:当前分钟内秒值
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetPPSCounterInitVal(uint32_t uiInitVal);

/*
***********************************************************************************************************************
* 函数名称: SysSetPPSCounterInitValEnable
*
* 功能描述: PPS计数初值设定使能
*
* 输入参数: uiState bit0:0：无效,1：使能PPS计数初值设定
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项:
***********************************************************************************************************************
*/
void SysSetPPSCounterInitValEnable(uint32_t uiState);

/*
***********************************************************************************************************************
* 函数名称: SysGetPMOnlineFlag
*
* 功能描述: PM在线标志
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : PM在线标志
*
* 注意事项:
***********************************************************************************************************************
*/
uint32_t SysGetPMOnlineFlag(void);


/*
***********************************************************************************************************************
* 函数名称: SysGetMonitorState
*
* 功能描述: 读状态监控寄存器
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 状态监控寄存器的值
*
* 注意事项:
***********************************************************************************************************************
*/
uint32_t SysGetMonitorState(void);


/*
***********************************************************************************************************************
* 函数名称: SysGetMonitorTemperature
*
* 功能描述: 读温度
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 温度值
*
* 注意事项:
***********************************************************************************************************************
*/
//uint32_t SysGetMonitorTemperature(void);


/*
***********************************************************************************************************************
* 函数名称: SysGetMCUState
*
* 功能描述: 读MCU状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : MCU状态
*
* 注意事项:
***********************************************************************************************************************
*/
//uint32_t SysGetMCUState(void);


/*
***********************************************************************************************************************
* 函数名称: SysGetAlarm
*
* 功能描述: 读报警寄存器
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 报警寄存器值
*
* 注意事项:
***********************************************************************************************************************
*/
uint32_t SysGetAlarm(void);

/*
***********************************************************************************************************************
* 函数名称: UpdateStateLED
*
* 功能描述: 更新状态灯寄存器
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void UpdateStateLED(uint16_t usState);

/*
***********************************************************************************************************************
* 函数名称: UpdateComLED
*
* 功能描述: 更新通讯灯寄存器
*
* 输入参数: usState:待更新内容
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void UpdateComLED(uint16_t usState);

/*
***********************************************************************************************************************
* 函数名称: SetTrimEnable
*
* 功能描述: 使能/禁止Trimble串口
*
* 输入参数: bEnable：使能标志位
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetTrimEnable( bool_t bEnable );

/*
***********************************************************************************************************************
* 函数名称: SetTrimBaudRate
*
* 功能描述: 设置Trimble串口波特率
*
* 输入参数: ucBaudRate：波特率, bit3-0: 0(1200) - 7(115200)
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetTrimBaudRate( uint8_t ucBaudRate );

/*
***********************************************************************************************************************
* 函数名称: SetTrimDataBits
*
* 功能描述: 设置Trimble串口数据位
*
* 输入参数: ucDataBits：数据位, bit0: 0(7bit)-1(8bit)
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetTrimDataBits( uint8_t ucDataBits );

/*
***********************************************************************************************************************
* 函数名称: SetTrimParity
*
* 功能描述: 设置Trimble奇偶校验
*
* 输入参数: ucParity：奇偶校验, 0: None, 1: Odd, 2: EVEN
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetTrimParity( uint8_t ucParity );

/*
***********************************************************************************************************************
* 函数名称: SetTrimStopBits
*
* 功能描述: 设置Trimble停止位
*
* 输入参数: ucStopBits：停止位, bit0: 0(1 bit), 1(2 bit)
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetTrimStopBits( uint8_t ucStopBits );

/*
***********************************************************************************************************************
* 函数名称: ResetGPSRecvStatus
*
* 功能描述: 清Trimble串口接收状态：相应位写1清
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void ResetGPSRecvStatus( void );

/*
***********************************************************************************************************************
* 函数名称: GetGPSRecvStatus
*
* 功能描述: 获取 Trimble串口接收状态
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : Trimble串口接收状态
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetGPSRecvStatus( void );

/*
***********************************************************************************************************************
* 函数名称: IsGPSPortRecvedFrame
*
* 功能描述: 判断 Trimble串口是否接收到报文
*
* 输入参数: usRecvStatus：接收状态
*
* 输出参数: 无
*
* 返 回 值  : 是否接收到报文标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsGPSPortRecvedFrame( uint16_t usRecvStatus );

/*
***********************************************************************************************************************
* 函数名称: IsGPSPortRecvedError
*
* 功能描述: 判断 Trimble串口是否发生接收错误
*
* 输入参数: usRecvStatus：接收状态
*
* 输出参数: 无
*
* 返 回 值  : 是否接收错误标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsGPSPortRecvedError( uint16_t usRecvStatus );

/*
***********************************************************************************************************************
* 函数名称: IsGPSPortRecvFIFOEmpty
*
* 功能描述: 判断Trimble串口接收FIFO是否为空
*
* 输入参数: usRecvStatus：接收状态, bit2: 0-Empty; 1-Not Empty
*
* 输出参数: 无
*
* 返 回 值  : 空标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsGPSPortRecvFIFOEmpty( uint16_t usRecvStatus );

/*
***********************************************************************************************************************
* 函数名称: GetGPSPortRecvData
*
* 功能描述: 获取Trimble串口接收数据：逐字节接收
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 单字节数据
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint8_t GetGPSPortRecvData( void );

/*
***********************************************************************************************************************
* 函数名称: GPSPortRecv
*
* 功能描述: Trimble串口接收校时包
*
* 输入参数: pucBuff：接收缓冲区首地址；
*          pusLen：接收缓冲区的长度。
*
* 输出参数: pusLen：返回数据长度
*
* 返 回 值  : 接收成功标志
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t GPSPortRecv( uint8_t pucBuff[], uint16_t *pusLen );

/*
***********************************************************************************************************************
* 函数名称: GetSysTimeReg1
*
* 功能描述: 获取系统时间寄存器1的值, Bit 15-0
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 寄存器值
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetSysTimeReg1( void );

/*
***********************************************************************************************************************
* 函数名称: GetSysTimeReg2
*
* 功能描述: 获取系统时间寄存器2的值, Bit 31-16
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 寄存器值
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetSysTimeReg2( void );

/*
***********************************************************************************************************************
* 函数名称: GetSysTimeReg3
*
* 功能描述: 获取系统时间寄存器3的值, Bit 47-32
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 寄存器值
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetSysTimeReg3( void );

/*
***********************************************************************************************************************
* 函数名称: GetSysTimeReg4
*
* 功能描述: 获取系统时间寄存器4的值, Bit 63-48
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 寄存器值
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t GetSysTimeReg4( void );

/*
***********************************************************************************************************************
* 函数名称: SetSysTimeAdjReg1
*
* 功能描述: 设置系统时间校准寄存器1, Bit 15-0
*
* 输入参数: usTime：时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysTimeAdjReg1( uint16_t usTime );

/*
***********************************************************************************************************************
* 函数名称: SetSysTimeAdjReg2
*
* 功能描述: 设置系统时间校准寄存器2, Bit 31-16
*
* 输入参数: usTime：时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysTimeAdjReg2( uint16_t usTime );

/*
***********************************************************************************************************************
* 函数名称: SetSysTimeAdjReg3
*
* 功能描述: 设置系统时间校准寄存器3, Bit 47-32
*
* 输入参数: usTime：时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysTimeAdjReg3( uint16_t usTime );

/*
***********************************************************************************************************************
* 函数名称: SetSysTimeAdjReg4
*
* 功能描述: 设置系统时间校准寄存器4, Bit 63-48
*
* 输入参数: usTime：时间
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysTimeAdjReg4( uint16_t usTime );

/*
***********************************************************************************************************************
* 函数名称: SetSysTimeAdjEnReg
*
* 功能描述: 设置系统时间校准使能寄存器
*
* 输入参数: usEn：使能标志位，bit 0: 0-Invalid; 1-Enable
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysTimeAdjEnReg( uint16_t usEn );

/*
***********************************************************************************************************************
* 函数名称: SetSysAdjTime
*
* 功能描述: 设置系统校准时间
*
* 输入参数: llTime：时间，单位us
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void SetSysAdjTime( long64_t llTime );

#endif /* CM_LOCALBUS_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

