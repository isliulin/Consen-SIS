/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    :
*
*  文件名称    : Log.h
*
*  功能简介    :
*
*  作者            : 王东
*
*  创建日期    : 2017-02-13
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef LOG_H_
#define LOG_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "Sys/inc/Sys.h"
#include "Sys/inc/DataType.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
/*#define DEBUG_LOGM*/

#define DEBUG_OUT_LOG

#ifdef DEBUG_OUT_LOG
#define DEBUG_LOG(format, args...)  printf ("DB_LOG: ") ; printf(format, ##args)
#else
#define DEBUG_LOG(format, args...)
#endif

#define INVALID_FD              (-1)

#define MAX_LOG_NUM             (10000U)  /* 最多可记录的日志数目：10000U */
#define MAX_FILE_LOG_NUM        (5000U)   /* 每个设备文件最多可记录的日志数目 */

#define READ_LOG_FROM_BEGINNING (0xFFFF)

#define LOG_QUEUE_EMPTY         (-1)      /* 日志队列为空 */
#define READ_LOG_DONE           (-2)      /* 读取LOG: 已读空 */
#define READ_LOG_EPARA          (-3)      /* 读取LOG失败: 入参错误 */
#define READ_LOG_EFILE          (-4)      /* 读取LOG失败: 文件相关系统调用失败 */

/* ______________________________________________________
* | L | Sector 0 size: 64k                          |   |
* | O | LogCtrlInfo: Reserve 120B(Content only 12B) |   |
* |   | Log0 Log1 Log2 Log3 Log4 ...                |   |
* | G | ...                                         |   |
* | 0 | Log4999                                     | S |
* |___|_____________________________________________| R |
* | L | Sector 1 size: 64K                          | A |
* | O | Log5000 Log5001 Log5002 ...                 | M |
* | G | ...                                         |   |
* | 1 | SOE9999                                     |   |
* |___|_____________________________________________|___|
*/

#define OFF_LOG_CTRL   (16U)
#define OFF_LOG        (320U)

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* Log Info. 日志信息 */
typedef struct LogInfoTag
{
    uint32_t uiSec;      /* 时间戳 相对起点走过的秒 起点：1970.01.01 00:00:00 */
    uint32_t uiMicroSec; /* 时间戳 -微秒 */
    uint32_t uiLogID;    /* 不同的ID代表不同的含义 */
}LogInfo_t;

/* Log Control Info.  日志记录控制信息：循环队列，10000条 */
typedef struct LogCtrlInfoTag
{
    uint16_t usTotalNum;  /* 日志容量：常数，10000 */
    uint16_t usCurNum;    /* 当前日志数目 */
    uint16_t usHead;      /* 写入索引值：以日志为单位 */
    uint16_t usTail;      /* 读取索引值：以日志为单位，最老一条日志 */
    bool_t bFull;         /* 队列满标志 */
    uint8_t ucReserve[3]; /* 预留 */
}LogCtrlInfo_t;

/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/
/*
***********************************************************************************************************************
* 函数名称: LogInit
*
* 功能描述: 初始化
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void LogInit(void);

/*
***********************************************************************************************************************
* 函数名称: LogClear
*
* 功能描述: 清除日志
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void LogClear( void );

/*
***********************************************************************************************************************
* 函数名称: LogGetCurNum
*
* 功能描述: 获取当前日志数目
*
* 输入参数: 无
*
* 输出参数: 当前日志数目
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

uint16_t LogGetCurNum( void );

/*
***********************************************************************************************************************
* 函数名称: LogWrite
*
* 功能描述: 记录1条日志
*
* 输入参数: uiLogID: 日志的id
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void LogWrite( uint32_t uiLogID );

/*
***********************************************************************************************************************
* 函数名称: LogRead
*
* 功能描述: 从SRAM设备文件读取一条日志
*
* 输入参数: pstLogInfo: 待存放日志的指针
*          usLogicPos: 队列中的位置(READ_LOG_FROM_BEGINNING 表示从开头读)
*
* 输出参数: pusNextIndex：下一可读索引值
*
* 返 回 值  : -1 日志队列为空，              下一可读索引值被设置为  0
*          -2 已读空，                          下一可读索引值被设置为 下一写入位置，usHead
*          -3 入参错误，                      下一可读索引值 未被设置，需调用者处理
*          -4 文件相关系统调用失败，下一可读索引值被设置为 usLogicPos非0xFFFF时：usLogicPos；否则当前最老的日志，uiTail
*          >=0 下一可读索引值，          下一可读索引值 与返回值相同
*
* 注意事项: 无
***********************************************************************************************************************
*/

int32_t LogRead( LogInfo_t *pstLogInfo, uint16_t usLogicPos, puint16_t pusNextIndex );

#endif /* LOG_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

