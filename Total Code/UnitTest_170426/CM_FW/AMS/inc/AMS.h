/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*                                  
*                                  
*  项目名称    : 安全控制系统
*
*  模块名称    : AMS软件应用模块
*
*  文件名称    : AMS.h
*
*  功能简介    : 处理AMS软件命令和相关配置
*
*  作者        : 王东
*
*  创建日期    : 2016-02-16
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef AMS_H_
#define AMS_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "Sys/inc/Sys.h"
#include "Sys/inc/DataType.h"
#include "ExterComm/inc/ComCommon.h"
#include "ExterComm/inc/ExterComm.h"
#include "ExterComm/inc/PCSWCommon.h"
#include "Task/inc/MainTask.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/

#define DEBUG_SWAMS

#define DEBUG_OUT_AMS

#ifdef DEBUG_OUT_AMS
#define DEBUG_AMS(format, args...)  printf ("DB_AMS: ") ; printf(format, ##args)
#else
#define DEBUG_AMS(format, args...)
#endif

#define AMS_PM_TIMEOUT_CYCLE_CNT  (60*1000*1000/(MAIN_TASK_PERIOD))  /* PM应答AMS命令的超时拍数：60s */
#define AMS_SW_TIMEOUT_CYCLE_CNT  (90*1000*1000/(MAIN_TASK_PERIOD))  /* AMS软件超时拍数: 90s */

/******************** 通信服务相关开始 ********************/
/* Request Message Type Range */
#define AMS_ATYPE_MIN       (4001)  /* Minimum */
#define AMS_ATYPE_MAX       (4500)  /* Maximum */

/* Request Message Type：CM Handle */
#define AMS_LOGIN           (4001)  /* 登录服务 */
#define AMS_LOGOUT          (4002)  /* 退出登录服务 */
#define AMS_HEART           (4003)  /* 心跳检测 */

/* Request Message Type：PM Handle */
#define AMS_SCANIO          (4004)  /* 探测I/O模块 */
#define AMS_DWHARTCMD       (4005)  /* 下发Hart命令 */

/******************** 通信服务相关结束 ********************/

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* AMS Info.  AMS软件信息 */
typedef struct AMSInfoTag
{
    NetworkPortType_t emNetwork;  /* Network 网口号 */
    uint32_t uiIPAddr;            /* IP Address 数据源的IP地址 */
    uint16_t usPort;              /* Port 数据源的端口号 */
    uint8_t ucAccAuth;            /* Access Authority  访问权限 */
    uint8_t ucReserve;            /* Reserve 预留 */
    LogStatus_t emLog;            /* Log Status 登录状态 */
    SelPMID_t emSelPMID;          /* Selected PM ID  已选取的PM模块的编号 */
    uint32_t uiWaitReqCycleCnt;   /* 已等待软件请求的拍数 */
}AMSInfo_t;


/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
* 函数名称: AMSInit
*
* 功能描述: 模块初始化函数
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值: 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void AMSInit( void );

/*
***********************************************************************************************************************
* 函数名称: AMSCycle
*
* 功能描述: 模块周期运行函数
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值: 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void AMSCycle( void );

#endif /*AMS_H_*/

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/


