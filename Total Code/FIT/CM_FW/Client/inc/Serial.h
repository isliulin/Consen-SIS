/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*                                  
*                                  
*  项目名称    : 安全控制系统
*
*  模块名称    : Client软件应用模块
*
*  文件名称    : Serial.h
*
*  功能简介    : 串口相关功能
*
*  作者        : 王东
*
*  创建日期    : 2017-04-01
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef SERL_H_
#define SERL_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "Sys/inc/Sys.h"
#include "Sys/inc/DataType.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/

//#define DEBUG_SRL    /* Debug client serial port */

#define DEBUG_OUT_SERL

#ifdef DEBUG_OUT_SERL
#define DEBUG_SERL(format, args...)  printf ("DB_SERL: ") ; printf(format, ##args)
#else
#define DEBUG_SERL(format, args...)
#endif

#define NUM_OF_CLI_SERIAL_PORT (1)  /* 诊断软件可使用的串口数目：仅调试口1个 */

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* Buffer Type  缓冲区类型枚举定义 */
typedef enum BuffTypeTag
{
    BUFF_RECV = 0,  /* Receive Buffer         接收缓冲区 */
    BUFF_SEND,      /* Send Buffer            发送缓冲区 */
    BUFF_ALL        /* Receive & Send Buffer  接收和接收缓冲区 */
}BuffType_t;

/* Serial Port Settings 串口设置参数结构体定义 */
typedef struct SerlPortSetsTag
{
    uint8_t ucBaudRate;
    uint8_t ucDataBits;
    uint8_t ucStopBits;
    uint8_t ucParity;
    uint8_t ucHandshake;
    uint8_t ucTermiOpts;
    uint8_t ucReserve[2];
}SerlPortSets_t;

/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
* 函数名称: OpenSerlPort
*
* 功能描述: 打开串口：未打开时，打开；已打开时，直接返回
*
* 输入参数: ucSerialIndex：串口索引值；
*          piSerlFDAray：串口文件描述符数组。
*
* 输出参数: 无
*
* 返 回 值: 是否打开成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t OpenSerlPort( uint8_t ucSerialIndex, int32_t piSerlFDAray[]);

/*
***********************************************************************************************************************
* 函数名称: IsSerlPortOpen
*
* 功能描述: 判断串口是否处于打开状态
*
* 输入参数: ucSerialIndex：串口索引值；
*          piSerlFDAray：串口文件描述符数组。
*
* 输出参数: 无
*
* 返 回 值: 是否处于打开状态
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t IsSerlPortOpen( uint8_t ucSerialIndex, int32_t piSerlFDAray[]);

/*
***********************************************************************************************************************
* 函数名称: CloseSerlPort
*
* 功能描述: 关闭串口：已打开时，关闭；未打开时，直接返回。
*
* 输入参数: ucSerialIndex：串口索引值；
*          piSerlFDAray：串口文件描述符数组。
*
* 输出参数: 无
*
* 返 回 值: 是否关闭成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t CloseSerlPort( uint8_t ucSerialIndex, int32_t piSerlFDAray[]);

/*
***********************************************************************************************************************
* 函数名称: ClearSerlPortBuff
*
* 功能描述: 清除串口发送/接收缓冲区
*
* 输入参数: iFD：串口文件描述符；
*          emBuffType：清除类型。
*
* 输出参数: 无
*
* 返 回 值: 是否成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t ClearSerlPortBuff( int32_t iFD, BuffType_t emBuffType );

/*
***********************************************************************************************************************
* 函数名称: ConfigSerlPort
*
* 功能描述: 配置串口
*
* 输入参数: ucSerialIndex：串口索引值；
*          piSerlFDAray：串口文件描述符数组；
*          pstSerlSets：串口设置参数。
*
* 输出参数: 无
*
* 返 回 值: 是否成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t ConfigSerlPort( uint8_t ucSerialIndex, int32_t const piSerlFDAray[], SerlPortSets_t const *pstSerlSets );

/*
***********************************************************************************************************************
* 函数名称: SetSerlPort
*
* 功能描述: 设置串口：已打开时，直接设置；未打开时，先打开在设置。
*
* 输入参数: ucSerialIndex：串口索引值；
*          piSerlFDAray：串口文件描述符数组；
*          pstSerlSets：串口配置参数。
*
* 输出参数: 无
*
* 返 回 值: 是否设置成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t SetSerlPort( uint8_t ucSerialIndex, int32_t piSerlFDAray[], SerlPortSets_t const *pstSerlSets );

#endif /* SERL_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/


