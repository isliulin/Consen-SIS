/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    : 系统资源管理模块
*
*  文件名称    : SysCMBus.h
*
*  功能简介    :
*
*  作者       : 李琦
*
*  创建日期    : 2016-02-24
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef SYS_CMBUS_H_
#define SYS_CMBUS_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "inc/DataType.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
#define MAX_MSG_LEN         8000                /*最大请求或应答消息内容长度 (FPGA收发缓冲区为8192，预留192字节头部信息)*/

#define MSGBOX_LOCKED       true                /* 信箱被锁定*/
#define MSGBOX_UNLOCKED     false               /* 信箱未锁定 */

#define MSGBOX_FULL         true                /* 信箱满 */
#define MSGBOX_EMPTY        false               /* 信箱空 */



/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* 消息*/
typedef struct SysMsgTag
{
    uint16_t usLen;                             /* 消息内容长度 */
    uint8_t ucContent[MAX_MSG_LEN];             /* 存放消息内容 */
} SysMsg_t;

/* 信箱 */
typedef struct SysMsgBoxTag
{
    bool_t bLock;                               /* 信箱是否可以被访问 */
    bool_t bMsgBoxStatus;                       /* 信箱的两种状态：空或满 */
    SysMsg_t stMsg;                             /* 消息 */
} SysMsgBox_t;

/* 消息类型（请求或应答）*/
typedef enum SysMsgTypeTag
{
    SOE_REQ = 0,                                /* 请求 */
    SOE_RESP = 1,                               /* 应答 */
    CS1131_REQ = 2,                             /* 请求 */
    CS1131_RESP = 3,                            /* 应答 */
    OPC_REQ = 4,                                /* 请求 */
    OPC_RESP = 5,                               /* 应答 */
    CLIENT_REQ = 6,                             /* 请求 */
    CLIENT_RESP = 7,                            /* 应答 */
    AMS_REQ = 8,                                /* 请求 */
    AMS_RESP = 9,                               /* 应答 */
    INTER_CMD_REQ = 10,                         /* 请求 */
    INTER_CMD_RESP = 11,                        /* 应答 */
    DIAG_REQ = 12,                              /* 请求 */
    DIAG_RESP = 13,                             /* 应答 */
    NUM_OF_MSGTYPE
} SysMsgType_t;



/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/
/*
***********************************************************************************************************************
* 函数名称: SysCMBusInit
*
* 功能描述: 静态变量初始化
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SysCMBusInit(void);

/*
***********************************************************************************************************************
* 函数名称: SysGetMsg
*
* 功能描述: 从系统资源模块获取消息（请求/应答）
*
* 输入参数: emCMID: CM的ID
*        emMsgType: 各种消息类型
*
* 输出参数: pucContent: 指向待读出的消息内容
*         pusLen: 指向待读出的消息内容长度
*
* 返 回 值  : true-收到消息
*        false- 1)无数据  2)不允许访问  3)输入输出参数错误
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SysGetMsg (CMController_t emCMID, SysMsgType_t emMsgType, puint8_t pucContent, puint16_t pusLen);

/*
***********************************************************************************************************************
* 函数名称: SysGetMsgLen
*
* 功能描述: 从系统资源模块获取消息（请求/应答）的长度
*
* 输入参数: emCMID: CM的ID
*        emMsgType: 各种消息类型
*
* 输出参数: pusLen: 指向待读出的消息内容长度
*
* 返 回 值  : true-读取成功
*        false- 1)无数据  2)不允许访问  3)输入输出参数错误
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SysGetMsgLen (CMController_t emCMID, SysMsgType_t emMsgType, puint16_t pusLen);

/*
***********************************************************************************************************************
* 函数名称: SysSetMsg
*
* 功能描述: 将请求或应答消息写入系统资源模块
*
* 输入参数: emCMID: CM的ID
*        emMsgType: 各种消息类型
*
* 输出参数: pucContent: 指向待写入的消息内容
*         pusLen: 指向待写入的消息内容长度
*
* 返 回 值  : 写入成功或失败
*
* 注意事项: 无
***********************************************************************************************************************
*/
bool_t SysSetMsg (CMController_t emCMID, SysMsgType_t emMsgType , puint8_t pucContent, uint16_t usLen);


#endif /* SYS_CMBUS_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

