/*
***********************************************************************************************************************
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*
*
*  项目名称    : 安全控制系统
*
*  模块名称    :
*
*  文件名称    : SharedRetain.h
*
*  功能简介    :
*
*  作者            : 李琦
*
*  创建日期    : 2016-08-15
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef SHARED_RETAIN_H_
#define SHARED_RETAIN_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "inc/DataType.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/
/* 对SRAM的地址规划 */
#define RETAIN_SRAM_SEC4_START_ADDR               (0xFF640000)


#define RETAIN_SRAM_TASK0_OFFSET                  (0U)
#define RETAIN_SRAM_TASK1_OFFSET                  (4096U)
#define RETAIN_SRAM_TASK0_SIZE                    (1024U)
#define RETAIN_SRAM_TASK1_SIZE                    (1024U)

/* ______________________________________________________
* | S | Sector 0 start addr(0xFF600000)             |   |
* | O | SOE0 SOE1 SOE2 SOE3 SOE4 ...                |   |
* | F | ...                                         |   |
* | T | SOE6552                                     |   |
* |   |---------------------------------------------| S |
* | S | Sector 1 start addr(0xFF610000)             | R |
* | O | SOE6553 SOE6554 SOE6555 ...                 | A |
* | E | ...                                         | M |
* |   | SOE9999                                     |   |
* |___|_____________________________________________|   |
* | H | Sector 2 start addr(0xFF620000)             |   |
* | A | SOE0 SOE1 SOE2 SOE3 SOE4 ...                |   |
* | R | ...                                         |   |
* | D | SOE5461                                     |   |
* |   |---------------------------------------------|   |
* | S | Sector 3 start addr(0xFF630000)             |   |
* | O | SOE5462 SOE5463 SOE5464 ...                 |   |
* | E | ...                                         |   |
* |   | SOE9999                                     |   |
* |___|_____________________________________________|   |
* | R | Sector 4 start addr(0xFF640000)             |   |
* | E | task0 retain data                           |   |
* | T | offset = 0                                  |   |
* | A | size = 1024 (3072 reserved)                 |   |
* | I | ...                                         |   |
* | N |---------------------------------------------|   |
* |   | task1 retain data                           |   |
* |   | offset = 4096                               |   |
* | D | size = 1024 (3072 reserved)                 |   |
* | A | ...                                         |   |
* | T |                                             |   |
* | A |                                             |   |
* |___|_____________________________________________|___|
*/

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/
/*
***********************************************************************************************************************
* 函数名称: SharedRetainInit
*
* 功能描述: 初始化
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值  : 无
*
* 注意事项: 无
***********************************************************************************************************************
*/
void SharedRetainInit(void);

/*
***********************************************************************************************************************
* 函数名称: SharedSetTask0RetainData
*
* 功能描述: 将Task0的retain数据写入SRAM
*
* 输入参数: pucBuf：指向待写入数据起始地址
*        usLen：待写入数据长度
*
* 输出参数: 无
*
* 返 回 值  : true-写入成功
*        false-写入失败
*
* 注意事项: usLen必须为偶数
***********************************************************************************************************************
*/
bool_t SharedSetTask0RetainData(puint8_t pucBuf, uint16_t usLen);


/*
***********************************************************************************************************************
* 函数名称: SharedSetTask1RetainData
*
* 功能描述: 将Task1的retain数据写入SRAM
*
* 输入参数: pucBuf：指向待写入数据起始地址
*        usLen：待写入数据长度
*
* 输出参数: 无
*
* 返 回 值  : true-写入成功
*        false-写入失败
*
* 注意事项: usLen必须为偶数
***********************************************************************************************************************
*/
bool_t SharedSetTask1RetainData(puint8_t pucBuf, uint16_t usLen);


/*
***********************************************************************************************************************
* 函数名称: SharedGetTask0RetainData
*
* 功能描述: 将Task0的retain数据从SRAM读出
*
* 输入参数: pucBuf：指向待读出数据起始地址
*        usLen：待读出数据长度
*
* 输出参数: 无
*
* 返 回 值  : true-读出成功
*        false-读出失败
*
* 注意事项: usLen必须为偶数
***********************************************************************************************************************
*/
bool_t SharedGetTask0RetainData(puint8_t pucBuf, uint16_t usLen);


/*
***********************************************************************************************************************
* 函数名称: SharedGetTask1RetainData
*
* 功能描述: 将Task1的retain数据从SRAM读出
*
* 输入参数: pucBuf：指向待读出数据起始地址
*        usLen：待读出数据长度
*
* 输出参数: 无
*
* 返 回 值  : true-读出成功
*        false-读出失败
*
* 注意事项: usLen必须为偶数
***********************************************************************************************************************
*/
bool_t SharedGetTask1RetainData(puint8_t pucBuf, uint16_t usLen);


#endif /* SHARED_RETAIN_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/

