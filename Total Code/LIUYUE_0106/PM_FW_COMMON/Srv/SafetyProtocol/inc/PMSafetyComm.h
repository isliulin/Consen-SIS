/*
*********************************************************************************************************************** 
*                  Copyright(c) 北京康吉森技术有限公司 2015
*           Beijing Consen Technologies Co.,Ltd. All rights reserved.
*                                  
*                                  
*  项目名称    : 安全控制系统
*
*  模块名称    : PM间安全通讯
*
*  文件名称    : PMSafetyComm.h
*
*  功能简介    : PM间安全通讯相关处理
*
*  作者        : 王东
*
*  创建日期    : 2016-04-18
*
*  版本信息    : V1.0
*
*  修订信息    : 无
*
***********************************************************************************************************************
*/

#ifndef PMSAFETY_H_
#define PMSAFETY_H_

/*
***********************************************************************************************************************
*                                包含头文件
***********************************************************************************************************************
*/
#include "inc/DataType.h"
#include "inc/Hardware.h"
#include "SafetyCommon.h"
#include "Srv/SharedMem/inc/SharedSafetyComm.h"

/*
***********************************************************************************************************************
*                                宏定义
***********************************************************************************************************************
*/

#define DEBUG_PMSAFETY

#define PMSAFETY_CRC_LEN       (4)        /* PM间安全通讯CRC域的长度 */

/*
***********************************************************************************************************************
*                                数据结构定义
***********************************************************************************************************************
*/

/* PM Receive Info.  接收方：接收信息结构体定义 */
typedef struct PMRecvInfoTag
{
    CommErrorInfo_t stErrInfo;  /* Error Info.             错误信息 */
    uint16_t usRecvSeqNum;      /* Receive Sequence Number 接收序号 */
    uint8_t ucReserve[2];       /* Reserve                 预留*/
}PMRecvInfo_t;

/* PM Send Info.     发送方：发送信息结构体定义 */
typedef struct PMSendInfoTag
{
    uint16_t usSendSeqNum;  /* Send Sequence Number 发送序号 */
    uint8_t ucReserve[2];   /* Reserve              预留 */
}PMSendInfo_t;

/* PM Safety Head Info.  PM间安全帧头信息结构体定义 */
typedef struct PMSafetyHeadInfoTag
{
    uint8_t ucSrcPMID;    /* Source PM ID       源PMID */
    uint8_t ucDstPMID;    /* Destination PM ID  目的PMID */
    uint16_t usSeq;       /* Sequence           序号 */
    uint32_t uiSDataLen;  /* Safety Data Length 安全数据的长度-字节 */
}PMSafetyHeadInfo_t;

/*
***********************************************************************************************************************
*                                全局函数声明
***********************************************************************************************************************
*/

/*
***********************************************************************************************************************
* 函数名称: PMCommInit
*
* 功能描述: PM间安全通讯初始化函数
*
* 输入参数: 无
*
* 输出参数: 无
*
* 返 回 值: 无
*
* 注意事项: 无
***********************************************************************************************************************
*/

void PMCommInit( void );

/*
***********************************************************************************************************************
* 函数名称: PMHandleRecvTO
*
* 功能描述: 接收超时错误处理
*
* 输入参数: emSendPMID：发送方PMID
*
* 输出参数: 无
*
* 返 回 值: 是否处理成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PMHandleRecvTO( PMController_t emSendPMID );

/*
***********************************************************************************************************************
* 函数名称: PMDecodeFra
*
* 功能描述: 解析数据帧
*
* 输入参数: emSendPMID：发送方PMID；
*          pucFra：数据帧首地址；
*          usFraLen：数据帧长度；
*          pucData：存放数据的首地址；
*
* 输出参数: pusDataLen：用于返回数据长度。
*
* 返 回 值: 是否解析成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PMDecodeFra( PMController_t emSendPMID, uint8_t const pucFra[], uint16_t usFraLen,
                    uint8_t pucData[], uint16_t *pusDataLen );

/*
***********************************************************************************************************************
* 函数名称: PMHandleSendTO
*
* 功能描述: 发送超时错误处理
*
* 输入参数: emRecvPMID：接收方PMID；
*          bTimeout：发送超时标志。
*
* 输出参数: 无
*
* 返 回 值: 是否处理成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PMHandleSendTO( PMController_t emRecvPMID, bool_t bTimeout );

/*
***********************************************************************************************************************
* 函数名称: PMMakeFra
*
* 功能描述: 构造将发送给指定接收方PM的数据帧
*
* 输入参数: emRecvPMID：接收方PMID；
*          pucData：数据首地址；
*          usDataLen：数据长度；
*          pucFra：存放数据帧的首地址；
*
* 输出参数: pusFraLen：用于返回数据帧的长度。
*
* 返 回 值: 是否解析成功
*
* 注意事项: 无
***********************************************************************************************************************
*/

bool_t PMMakeFra( PMController_t emRecvPMID, uint8_t const pucData[], uint16_t usDataLen,
                  uint8_t pucFra[], uint16_t *pusFraLen );

#endif /* PMSAFETY_H_ */

/*
***********************************************************************************************************************
                                 文件结束
***********************************************************************************************************************
*/


